{"ast":null,"code":"import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, getCurrentUser, gooogleProvider } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signOutFailure, signOutSuccess, signSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    })); // console.log(userRef);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, gooogleProvider);\n    yield getSnapshotFromUserAuth(user); // console.log(userRef);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* singOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, singOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/redux/user/user.sagas.js"],"names":["signInWithEmailAndPassword","signInWithPopup","getDoc","all","call","put","takeLatest","auth","createUserProfileDocument","getCurrentUser","gooogleProvider","signInFailure","signOutFailure","signOutSuccess","signSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","id","data","error","signInWithGoogle","user","signInWithEmail","payload","email","password","isUserAuthenticated","singOut","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"AAAA,SAASA,0BAAT,EAAqCC,eAArC,QAA4D,eAA5D;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,EAA0DC,eAA1D,QAAiF,+BAAjF;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,WAAxD,QAA2E,gBAA3E;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMd,IAAI,CAACI,yBAAD,EAA4BS,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMjB,MAAM,CAACgB,OAAD,CAAjC;AACA,UAAMb,GAAG,CAACS,WAAW,CAAC;AAAEM,MAAAA,EAAE,EAAED,YAAY,CAACC,EAAnB;AAAuB,SAAGD,YAAY,CAACE,IAAb;AAA1B,KAAD,CAAZ,CAAT,CAHA,CAIA;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMvB,eAAe,CAACM,IAAD,EAAOG,eAAP,CAAtC;AACA,UAAMM,uBAAuB,CAACQ,IAAD,CAA7B,CAFA,CAIA;AACH,GALD,CAKE,OAAOF,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUG,eAAV,OAA4D;AAAA,MAAlC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AAC/D,MAAI;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMxB,0BAA0B,CAACO,IAAD,EAAOoB,KAAP,EAAcC,QAAd,CAAjD;AACA,UAAMZ,uBAAuB,CAACQ,IAAD,CAA7B;AAEH,GAJD,CAIE,OAAOF,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMZ,QAAQ,GAAG,MAAMR,cAAc,EAArC;AACA,QAAI,CAACQ,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AAEH,GALD,CAKE,OAAOK,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,OAAV,GAAoB;AACvB,MAAI;AACA,UAAMvB,IAAI,CAACwB,OAAL,EAAN;AACA,UAAM1B,GAAG,CAACQ,cAAc,EAAf,CAAT;AACH,GAHD,CAGE,OAAOS,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACO,cAAc,CAACU,KAAD,CAAf,CAAT;AACH;AACJ;AAED,OAAO,UAAUU,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACS,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACS,eAAe,CAACoB,mBAAjB,EAAsCV,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAM9B,UAAU,CAACS,eAAe,CAACsB,kBAAjB,EAAqCR,mBAArC,CAAhB;AACH;AAED,OAAO,UAAUS,cAAV,GAA2B;AAC9B,QAAMhC,UAAU,CAACS,eAAe,CAACwB,cAAjB,EAAiCT,OAAjC,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMrC,GAAG,CAAC,CAACC,IAAI,CAAC4B,mBAAD,CAAL,EAA4B5B,IAAI,CAAC8B,kBAAD,CAAhC,EAAsD9B,IAAI,CAACyB,mBAAD,CAA1D,EAAiFzB,IAAI,CAACkC,cAAD,CAArF,CAAD,CAAT;AAEH","sourcesContent":["import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, getCurrentUser, gooogleProvider } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signOutFailure, signOutSuccess, signSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield getDoc(userRef);\n        yield put(signSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n        // console.log(userRef);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield signInWithPopup(auth, gooogleProvider);\n        yield getSnapshotFromUserAuth(user);\n\n        // console.log(userRef);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield signInWithEmailAndPassword(auth, email, password);\n        yield getSnapshotFromUserAuth(user);\n\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* singOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, singOut);\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n\n}\n\n"]},"metadata":{},"sourceType":"module"}