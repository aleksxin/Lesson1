{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDoc, getFirestore, doc, setDoc } from \"firebase/firestore\"; //import 'firebase/firestore';\n//import 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyChFeYJYVrJbvMMPxcdr0_VvA9q-w1oxF0\",\n  authDomain: \"db-mimi.firebaseapp.com\",\n  projectId: \"db-mimi\",\n  storageBucket: \"db-mimi.appspot.com\",\n  messagingSenderId: \"1093630987077\",\n  appId: \"1:1093630987077:web:89cfeffb15cd1f4d6c0c2c\",\n  measurementId: \"G-5GML2RXSJD\"\n};\nconst app = initializeApp(config);\nconst analytics = getAnalytics(app);\nexport const auth = getAuth();\nexport const firestore = getFirestore();\nconst provider = new GoogleAuthProvider();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = doc(firestore, 'users', userAuth.uid);\n  const snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  console.log(snapShot);\n}; //provider.setCustomParamaters({ prompt: 'select_account' });\n\nexport const SignInWithGoogle = () => signInWithPopup(auth, provider); //export default firebase;\n\n_c = SignInWithGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInWithGoogle\");","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/firebase/firebase.utils.js"],"names":["initializeApp","getAnalytics","GoogleAuthProvider","signInWithPopup","getAuth","getDoc","getFirestore","doc","setDoc","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","firestore","provider","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","exists","displayName","email","createdAt","Date","error","console","log","message","SignInWithGoogle"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,kBAAT,QAAoC,eAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CAGA;AACA;;AAEA,MAAMC,MAAM,GAAG;AAEXC,EAAAA,MAAM,EAAE,yCAFG;AAIXC,EAAAA,UAAU,EAAE,yBAJD;AAMXC,EAAAA,SAAS,EAAE,SANA;AAQXC,EAAAA,aAAa,EAAE,qBARJ;AAUXC,EAAAA,iBAAiB,EAAE,eAVR;AAYXC,EAAAA,KAAK,EAAE,4CAZI;AAcXC,EAAAA,aAAa,EAAE;AAdJ,CAAf;AAkBE,MAAMC,GAAG,GAAGjB,aAAa,CAACS,MAAD,CAAzB;AAEF,MAAMS,SAAS,GAAGjB,YAAY,CAACgB,GAAD,CAA9B;AAEA,OAAO,MAAME,IAAI,GAACf,OAAO,EAAlB;AACP,OAAO,MAAMgB,SAAS,GAAGd,YAAY,EAA9B;AACP,MAAMe,QAAQ,GAAG,IAAInB,kBAAJ,EAAjB;AAEA,OAAO,MAAMoB,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AAEzE,MAAI,CAACD,QAAL,EAAe;AACjB,QAAME,OAAO,GAAGlB,GAAG,CAACa,SAAD,EAAW,OAAX,EAAmBG,QAAQ,CAACG,GAA5B,CAAnB;AACA,QAAMC,QAAQ,GAAG,MAAMtB,MAAM,CAACoB,OAAD,CAA7B;;AAEE,MAAI,CAACE,QAAQ,CAACC,MAAd,EAAqB;AACnB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAqBP,QAA3B;AACA,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMxB,MAAM,CAACiB,OAAD,EAAS;AAACI,QAAAA,WAAD;AAAaC,QAAAA,KAAb;AAAmBC,QAAAA,SAAnB;AAA6B,WAAGP;AAAhC,OAAT,CAAZ;AACD,KAFD,CAEE,OAAOS,KAAP,EACF;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACF;;AACCF,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,CAjBM,C,CAmBP;;AACA,OAAO,MAAMU,gBAAgB,GAAG,MAAMlC,eAAe,CAACgB,IAAD,EAAME,QAAN,CAA9C,C,CAEP;;KAFagB,gB","sourcesContent":["import { initializeApp } from \"firebase/app\";\n\nimport { getAnalytics } from \"firebase/analytics\";\nimport { GoogleAuthProvider }  from \"firebase/auth\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDoc, getFirestore, doc, setDoc } from \"firebase/firestore\";\n\n\n//import 'firebase/firestore';\n//import 'firebase/auth';\n\nconst config = {\n\n    apiKey: \"AIzaSyChFeYJYVrJbvMMPxcdr0_VvA9q-w1oxF0\",\n  \n    authDomain: \"db-mimi.firebaseapp.com\",\n  \n    projectId: \"db-mimi\",\n  \n    storageBucket: \"db-mimi.appspot.com\",\n  \n    messagingSenderId: \"1093630987077\",\n  \n    appId: \"1:1093630987077:web:89cfeffb15cd1f4d6c0c2c\",\n  \n    measurementId: \"G-5GML2RXSJD\"\n  \n  };\n  \n  const app = initializeApp(config);\n\nconst analytics = getAnalytics(app);\n\nexport const auth=getAuth();\nexport const firestore = getFirestore();\nconst provider = new GoogleAuthProvider();\n\nexport const createUserProfileDocument = async (userAuth, additionalData)=>{\n    \n  if (!userAuth) return;\nconst userRef = doc(firestore,'users',userAuth.uid);\nconst snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists){\n    const {displayName, email}=userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userRef,{displayName,email,createdAt,...additionalData})\n    } catch (error)\n    {\n        console.log('error creating user', error.message);\n    }\n  }\n    console.log(snapShot);\n}\n\n//provider.setCustomParamaters({ prompt: 'select_account' });\nexport const SignInWithGoogle = () => signInWithPopup(auth,provider);\n\n//export default firebase;"]},"metadata":{},"sourceType":"module"}