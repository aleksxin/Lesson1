{"ast":null,"code":"var _jsxFileName = \"/home/sasho/reactpr/clothing-shit/src/components/sign-in/sign-in.component.jsx\";\nimport React from \"react\";\nimport './sign-in.styles.scss';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, SignInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        signInWithEmailAndPassword(auth, email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(\"error with signing in\" + error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I alread have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in width your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          handleChange: this.handleChange,\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true,\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: [' ', \"Sign in with google \", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDIspatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDIspatchToProps)(SignIn);","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","SignInWithGoogle","signInWithEmailAndPassword","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","setState","error","console","log","handleChange","value","name","target","render","mapDIspatchToProps","dispatch","connect"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nimport './sign-in.styles.scss';\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, SignInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { email, password } = this.state;\n        try {\n\n\n            signInWithEmailAndPassword(auth, email, password);\n\n\n\n            this.setState({ email: '', password: '' });\n        } catch (error) {\n            console.log(\"error with signing in\" + error);\n        }\n\n    };\n\n    handleChange = event => {\n        const { value, name } = event.target;\n\n        this.setState({ [name]: value });\n    };\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <div className=\"sign-in\">\n                <h2>I alread have an account</h2>\n                <span>Sign in width your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n\n                    <FormInput name='email' type='email' handleChange={this.handleChange} value={this.state.email} label='email' required />\n\n                    <FormInput name='password' type='password' value={this.state.password} handleChange={this.handleChange} label='password' required autoComplete='on' />\n\n                    <div className='buttons'>\n                        <CustomButton type=\"submit\">\n                            Sign in\n                        </CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                            {' '}\n                            Sign in with google {' '}\n\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDIspatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDIspatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}