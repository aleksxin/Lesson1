{"ast":null,"code":"import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, gooogleProvider, SignInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, gooogleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    })); // console.log(userRef);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/redux/user/user.sagas.js"],"names":["signInWithEmailAndPassword","signInWithPopup","getDoc","all","call","put","takeLatest","auth","createUserProfileDocument","gooogleProvider","SignInWithGoogle","signInFailure","signSuccess","UserActionTypes","signInWithGoogle","user","userRef","userSnapshot","id","data","error","signInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,0BAAT,EAAqCC,eAArC,QAA4D,eAA5D;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,eAA1C,EAA2DC,gBAA3D,QAAmF,+BAAnF;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,gBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,eAAe,CAACM,IAAD,EAAOE,eAAP,CAAtC;AACA,UAAMO,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMf,MAAM,CAACc,OAAD,CAAjC;AACA,UAAMX,GAAG,CAACO,WAAW,CAAC;AAAEM,MAAAA,EAAE,EAAED,YAAY,CAACC,EAAnB;AAAuB,SAAGD,YAAY,CAACE,IAAb;AAA1B,KAAD,CAAZ,CAAT,CAJA,CAKA;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACM,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,OAA4D;AAAA,MAAlC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AAC/D,MAAI;AACA,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMf,0BAA0B,CAACO,IAAD,EAAOgB,KAAP,EAAcC,QAAd,CAAjD;AACA,UAAMR,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMf,MAAM,CAACc,OAAD,CAAjC;AACA,UAAMX,GAAG,CAACO,WAAW,CAAC;AAAEM,MAAAA,EAAE,EAAED,YAAY,CAACC,EAAnB;AAAuB,SAAGD,YAAY,CAACE,IAAb;AAA1B,KAAD,CAAZ,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACM,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACnC,QAAMnB,UAAU,CAACO,eAAe,CAACa,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUa,kBAAV,GAA+B;AAClC,QAAMrB,UAAU,CAACO,eAAe,CAACe,mBAAjB,EAAsCP,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACqB,mBAAD,CAAL,EAA4BrB,IAAI,CAACuB,kBAAD,CAAhC,CAAD,CAAT;AAEH","sourcesContent":["import { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { getDoc } from \"firebase/firestore\";\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, gooogleProvider, SignInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield signInWithPopup(auth, gooogleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield getDoc(userRef);\n        yield put(signSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n        // console.log(userRef);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield signInWithEmailAndPassword(auth, email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield getDoc(userRef);\n        yield put(signSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\n\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n\n}"]},"metadata":{},"sourceType":"module"}