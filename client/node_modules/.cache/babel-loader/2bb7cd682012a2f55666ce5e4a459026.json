{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; //import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionStart } from \"./shop/shop.saga\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nconst getAll = {\n  store,\n  persistStore\n};\nexport default getAll;","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","fetchCollectionStart","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor","getAll"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B;AAEP,MAAMG,MAAM,GAAG;AACXH,EAAAA,KADW;AACJZ,EAAAA;AADI,CAAf;AAIA,eAAee,MAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\n//import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionStart } from \"./shop/shop.saga\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nconst getAll = {\n    store, persistStore\n};\n\nexport default getAll;"]},"metadata":{},"sourceType":"module"}