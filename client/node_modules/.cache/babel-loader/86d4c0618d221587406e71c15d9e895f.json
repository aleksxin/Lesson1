{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { writeBatch, getDoc, getFirestore, doc, setDoc, collection } from \"firebase/firestore\"; //import 'firebase/firestore';\n//import 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyChFeYJYVrJbvMMPxcdr0_VvA9q-w1oxF0\",\n  authDomain: \"db-mimi.firebaseapp.com\",\n  projectId: \"db-mimi\",\n  storageBucket: \"db-mimi.appspot.com\",\n  messagingSenderId: \"1093630987077\",\n  appId: \"1:1093630987077:web:89cfeffb15cd1f4d6c0c2c\",\n  measurementId: \"G-5GML2RXSJD\"\n};\nconst app = initializeApp(config);\nconst analytics = getAnalytics(app);\nexport const auth = getAuth();\nexport const firestore = getFirestore();\nconst provider = new GoogleAuthProvider();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = doc(firestore, 'users', userAuth.uid);\n  const snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth; //console.log(displayName);\n\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, onjectsToAdd) => {\n  const collectionRef = collection(firestore, collectionKey); ///  console.log(collectionRef);\n\n  const batch = writeBatch(firestore);\n  onjectsToAdd.forEach(element => {\n    const newDocRef = getDoc(doc(collectionRef, element.title));\n    console.log(newDocRef);\n  });\n}; //provider.setCustomParamaters({ prompt: 'select_account' });\n\nexport const SignInWithGoogle = () => signInWithPopup(auth, provider); //export default firebase;\n\n_c = SignInWithGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInWithGoogle\");","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/firebase/firebase.utils.js"],"names":["initializeApp","getAnalytics","GoogleAuthProvider","signInWithPopup","getAuth","writeBatch","getDoc","getFirestore","doc","setDoc","collection","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","firestore","provider","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","exists","displayName","email","createdAt","Date","error","console","log","message","addCollectionAndDocuments","collectionKey","onjectsToAdd","collectionRef","batch","forEach","element","newDocRef","title","SignInWithGoogle"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,kBAAT,QAAoC,eAApC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,EAA2CC,GAA3C,EAAgDC,MAAhD,EAAwDC,UAAxD,QAA0E,oBAA1E,C,CAIA;AACA;;AAEA,MAAMC,MAAM,GAAG;AAEXC,EAAAA,MAAM,EAAE,yCAFG;AAIXC,EAAAA,UAAU,EAAE,yBAJD;AAMXC,EAAAA,SAAS,EAAE,SANA;AAQXC,EAAAA,aAAa,EAAE,qBARJ;AAUXC,EAAAA,iBAAiB,EAAE,eAVR;AAYXC,EAAAA,KAAK,EAAE,4CAZI;AAcXC,EAAAA,aAAa,EAAE;AAdJ,CAAf;AAkBE,MAAMC,GAAG,GAAGnB,aAAa,CAACW,MAAD,CAAzB;AAEF,MAAMS,SAAS,GAAGnB,YAAY,CAACkB,GAAD,CAA9B;AAEA,OAAO,MAAME,IAAI,GAACjB,OAAO,EAAlB;AACP,OAAO,MAAMkB,SAAS,GAAGf,YAAY,EAA9B;AACP,MAAMgB,QAAQ,GAAG,IAAIrB,kBAAJ,EAAjB;AAEA,OAAO,MAAMsB,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AAEzE,MAAI,CAACD,QAAL,EAAe;AACjB,QAAME,OAAO,GAAGnB,GAAG,CAACc,SAAD,EAAW,OAAX,EAAmBG,QAAQ,CAACG,GAA5B,CAAnB;AACA,QAAMC,QAAQ,GAAG,MAAMvB,MAAM,CAACqB,OAAD,CAA7B;;AAEE,MAAI,CAACE,QAAQ,CAACC,MAAT,EAAL,EAAuB;AACrB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAqBP,QAA3B,CADqB,CAErB;;AACA,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMzB,MAAM,CAACkB,OAAD,EAAS;AAACI,QAAAA,WAAD;AAAaC,QAAAA,KAAb;AAAmBC,QAAAA,SAAnB;AAA6B,WAAGP;AAAhC,OAAT,CAAZ;AACD,KAFD,CAEE,OAAOS,KAAP,EACF;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACF;;AAGC,SAAOX,OAAP;AACH,CApBM;AAsBP,OAAO,MAAMY,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACxE,QAAMC,aAAa,GAAGhC,UAAU,CAACY,SAAD,EAAWkB,aAAX,CAAhC,CADwE,CAE1E;;AAEE,QAAMG,KAAK,GAAGtC,UAAU,CAACiB,SAAD,CAAxB;AACAmB,EAAAA,YAAY,CAACG,OAAb,CAAqBC,OAAO,IAAI;AAC5B,UAAMC,SAAS,GAAGxC,MAAM,CAACE,GAAG,CAACkC,aAAD,EAAeG,OAAO,CAACE,KAAvB,CAAJ,CAAxB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AAEH,GAJD;AAKD,CAVM,C,CAYP;;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAM7C,eAAe,CAACkB,IAAD,EAAME,QAAN,CAA9C,C,CAEP;;KAFayB,gB","sourcesContent":["import { initializeApp } from \"firebase/app\";\n\nimport { getAnalytics } from \"firebase/analytics\";\nimport { GoogleAuthProvider }  from \"firebase/auth\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { getAuth } from \"firebase/auth\";\nimport { writeBatch, getDoc, getFirestore, doc, setDoc, collection } from \"firebase/firestore\";\n\n\n\n//import 'firebase/firestore';\n//import 'firebase/auth';\n\nconst config = {\n\n    apiKey: \"AIzaSyChFeYJYVrJbvMMPxcdr0_VvA9q-w1oxF0\",\n  \n    authDomain: \"db-mimi.firebaseapp.com\",\n  \n    projectId: \"db-mimi\",\n  \n    storageBucket: \"db-mimi.appspot.com\",\n  \n    messagingSenderId: \"1093630987077\",\n  \n    appId: \"1:1093630987077:web:89cfeffb15cd1f4d6c0c2c\",\n  \n    measurementId: \"G-5GML2RXSJD\"\n  \n  };\n  \n  const app = initializeApp(config);\n\nconst analytics = getAnalytics(app);\n\nexport const auth=getAuth();\nexport const firestore = getFirestore();\nconst provider = new GoogleAuthProvider();\n\nexport const createUserProfileDocument = async (userAuth, additionalData)=>{\n    \n  if (!userAuth) return;\nconst userRef = doc(firestore,'users',userAuth.uid);\nconst snapShot = await getDoc(userRef);\n\n  if (!snapShot.exists()){\n    const {displayName, email}=userAuth;\n    //console.log(displayName);\n    const createdAt = new Date();\n    try {\n      await setDoc(userRef,{displayName,email,createdAt,...additionalData})\n    } catch (error)\n    {\n        console.log('error creating user', error.message);\n    }\n  }\n   \n\n    return userRef;\n}\n\nexport const addCollectionAndDocuments = (collectionKey, onjectsToAdd) => {\n  const collectionRef = collection(firestore,collectionKey);\n///  console.log(collectionRef);\n\n  const batch = writeBatch(firestore);\n  onjectsToAdd.forEach(element => {\n      const newDocRef = getDoc(doc(collectionRef,element.title));\n      console.log(newDocRef);\n    \n  });\n}\n\n//provider.setCustomParamaters({ prompt: 'select_account' });\nexport const SignInWithGoogle = () => signInWithPopup(auth,provider);\n\n//export default firebase;"]},"metadata":{},"sourceType":"module"}