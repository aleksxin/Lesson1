{"ast":null,"code":"var _jsxFileName = \"/home/sasho/reactpr/clothing-shit/client/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from \"react\";\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponenet => {\n  const Spinner = _ref => {\n    let {\n      isLoading,\n      ...otherProps\n    } = _ref;\n    return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n      children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WrappedComponenet, { ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  };\n\n  return Spinner;\n};\n\n_c = WithSpinner;\nexport default WithSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithSpinner\");","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/client/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponenet","Spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;;;AAEA,MAAMC,WAAW,GAAGC,iBAAiB,IAAI;AACrC,QAAMC,OAAO,GAAG,QAAiC;AAAA,QAAhC;AAAEC,MAAAA,SAAF;AAAa,SAAGC;AAAhB,KAAgC;AACjD,WAAOD,SAAS,gBACZ,QAAC,cAAD;AAAA,6BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ,QAAC,iBAAD,OAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,YALJ;AAOC,GARD;;AASA,SAAOF,OAAP;AACH,CAXD;;KAAMF,W;AAaN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\n\nconst WithSpinner = WrappedComponenet => {\n    const Spinner = ({ isLoading, ...otherProps}) => {\n    return isLoading ? (\n        <SpinnerOverlay>\n            <SpinnerContainer />\n        </SpinnerOverlay>\n    ) : (\n        <WrappedComponenet {...otherProps} />\n    );\n    };\n    return Spinner;\n};\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}