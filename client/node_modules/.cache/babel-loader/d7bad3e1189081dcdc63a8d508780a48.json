{"ast":null,"code":"import { collection, getDocs } from \"firebase/firestore\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.type\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECNTIONS_START\n});\nexport const fetchCollectionsSucess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return async dispatch => {\n    const collectionRef = collection(firestore, \"collections\");\n    dispatch(fetchCollectionsStart());\n\n    try {\n      const snapshot = await getDocs(collectionRef);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //updateCollections(collectionsMap);\n\n      dispatch(fetchCollectionsSucess(collectionsMap));\n    } catch (error) {\n      dispatch(fetchCollectionsFailure(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/redux/shop/shop.actions.js"],"names":["collection","getDocs","convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECNTIONS_START","fetchCollectionsSucess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","snapshot","collectionsMap","error","message"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,aAAD,KAAoB;AACxDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAApB,CAA/B;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,aAAa,GAAGjB,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAhC;AACAa,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;;AACA,QAAI;AACF,YAAMa,QAAQ,GAAG,MAAMjB,OAAO,CAACgB,aAAD,CAA9B;AAEA,YAAME,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD,CAHE,CAIF;;AACAF,MAAAA,QAAQ,CAACR,sBAAsB,CAACW,cAAD,CAAvB,CAAR;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACdJ,MAAAA,QAAQ,CAACJ,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAR;AACD;AACF,GAZD;AAaD,CAdM","sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.type\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECNTIONS_START,\n});\n\nexport const fetchCollectionsSucess = (collectionMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return async (dispatch) => {\n    const collectionRef = collection(firestore, \"collections\");\n    dispatch(fetchCollectionsStart());\n    try {\n      const snapshot = await getDocs(collectionRef);\n\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //updateCollections(collectionsMap);\n      dispatch(fetchCollectionsSucess(collectionsMap));\n    } catch (error) {\n      dispatch(fetchCollectionsFailure(error.message));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}