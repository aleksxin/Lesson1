{"ast":null,"code":"import { collection, getDocs } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSucess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.type\";\nexport function* fetchCollectionAsybc() {\n  try {\n    const collectionRef = collection(firestore, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSucess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // try{\n  // const snapshot = await getDocs(collectionRef);\n  // const collectionsMap = convertCollectionsSnapshotToMaphotToMap(snapshot);\n  // //updateCollections(collectionsMap);\n  // dispatch(fetchCollectionsSucess(collectionsMap));\n  // }\n  // catch(error){\n  //     dispatch(fetchCollectionsFailure(error.message));\n  // }\n\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECNTIONS_START, fetchCollectionAsybc);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/client/src/redux/shop/shop.saga.js"],"names":["collection","getDocs","all","call","put","takeLatest","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSucess","ShopActionTypes","fetchCollectionAsybc","collectionRef","snapshot","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECNTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,sBAAlC,QAAgE,gBAAhE;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGZ,UAAU,CAACO,SAAD,EAAY,aAAZ,CAAhC;AACA,UAAMM,QAAQ,GAAG,MAAMZ,OAAO,CAACW,aAAD,CAA9B;AACA,UAAME,aAAa,GAAG,MAAMX,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAhC;AACA,UAAMT,GAAG,CAACK,sBAAsB,CAACK,aAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACI,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GARqC,CAUtC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMZ,UAAU,CACdK,eAAe,CAACQ,wBADF,EAEdP,oBAFc,CAAhB;AAID;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACc,oBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSucess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.type\";\n\nexport function* fetchCollectionAsybc() {\n  try {\n    const collectionRef = collection(firestore, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSucess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  // try{\n  // const snapshot = await getDocs(collectionRef);\n\n  // const collectionsMap = convertCollectionsSnapshotToMaphotToMap(snapshot);\n  // //updateCollections(collectionsMap);\n  // dispatch(fetchCollectionsSucess(collectionsMap));\n  // }\n  // catch(error){\n  //     dispatch(fetchCollectionsFailure(error.message));\n  // }\n}\n\nexport function* fetchCollectionStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECNTIONS_START,\n    fetchCollectionAsybc\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}"]},"metadata":{},"sourceType":"module"}