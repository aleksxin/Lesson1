{"ast":null,"code":"import { collection, getDocs } from 'firebase/firestore';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.type';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECNTIONS_START\n});\nexport const fetchCollectionsSucess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return async dispatch => {\n    const collectionRef = collection(firestore, 'collections');\n    dispatch(fetchCollectionsStart());\n\n    try {\n      const snapshot = await getDocs(collectionRef);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //updateCollections(collectionsMap);\n\n      dispatch(fetchCollectionsSucess(collectionsMap));\n    } catch (error) {\n      dispatch(fetchCollectionsFailure(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/home/sasho/reactpr/clothing-shit/src/redux/shop/shop.actions.js"],"names":["collection","getDocs","convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECNTIONS_START","fetchCollectionsSucess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","snapshot","collectionsMap","error","message"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADkB,CAAP,CAA9B;AAKP,OAAO,MAAMC,sBAAsB,GAAGC,aAAa,KAAK;AACpDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBAD8B;AAEpDC,EAAAA,OAAO,EAAEF;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAO,MAAMC,QAAN,IAAiB;AACpB,UAAMC,aAAa,GAACjB,UAAU,CAACG,SAAD,EAAW,aAAX,CAA9B;AACAa,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;;AACA,QAAG;AACH,YAAMa,QAAQ,GAAG,MAAMjB,OAAO,CAACgB,aAAD,CAA9B;AAEA,YAAME,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD,CAHG,CAIH;;AACAF,MAAAA,QAAQ,CAACR,sBAAsB,CAACW,cAAD,CAAvB,CAAR;AACC,KAND,CAOA,OAAMC,KAAN,EAAY;AACRJ,MAAAA,QAAQ,CAACJ,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAR;AACH;AACJ,GAbD;AAcH,CAfM","sourcesContent":["import { collection, getDocs } from 'firebase/firestore';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.type';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECNTIONS_START,\n    \n});\n\nexport const fetchCollectionsSucess = collectionMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return async dispatch =>{\n        const collectionRef=collection(firestore,'collections');\n        dispatch(fetchCollectionsStart());\n        try{\n        const snapshot = await getDocs(collectionRef);\n        \n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //updateCollections(collectionsMap);\n        dispatch(fetchCollectionsSucess(collectionsMap));\n        }\n        catch(error){\n            dispatch(fetchCollectionsFailure(error.message));\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}